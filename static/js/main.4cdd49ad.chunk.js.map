{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","this","className","type","value","onChange","e","setState","target","placeholder","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","urls","description","style","gridRowEnd","ref","src","regular","alt","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","getElementById"],"mappings":"8PAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAQ,2BACRC,QAAQ,CACJC,cACA,4DC6BOC,E,4MAhCXC,MAAM,CAACC,KAAK,I,EACZC,aAAa,SAACC,GACVA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAE1B,IAAD,OACJ,OAcY,0BAAMK,SAAUC,KAAKL,aAAcM,UAAW,qCACtC,yBAAKA,UAAW,kBACZ,2BAAOA,UAAW,UAAWC,KAAK,OAAOC,MAAOH,KAAKP,MAAMC,KAAMU,SAAU,SAAAC,GAAC,OAAE,EAAKC,SAAS,CAACZ,KAAKW,EAAEE,OAAOJ,SAASK,YAAa,oBACjI,uBAAGP,UAAW,iBAEjB,yBAAKA,UAAW,iB,GA1BrBQ,IAAMC,WC6BfC,G,wDA5BX,WAAYb,GAAO,IAAD,8BACd,cAAMA,IASVc,SAAS,WACL,IAAMC,EAAO,EAAKC,SAASC,QAAQC,aAE5BC,EAAMC,KAAKC,KAAKN,EAAO,IAC7B,EAAKP,SAAS,CAACW,MAAMA,KAXtB,EAAKxB,MAAM,CAACwB,MAAM,GAClB,EAAKH,SAASL,IAAMW,YAJN,E,gEAOdpB,KAAKc,SAASC,QAAQM,iBAAiB,OAAOrB,KAAKY,Y,+BAU9C,IAAD,EACqBZ,KAAKF,MAAMwB,MAA7BC,EADH,EACGA,KAAKC,EADR,EACQA,YACZ,OACI,yBAAKC,MAAO,CAACC,WAAW,QAAD,OAAS1B,KAAKP,MAAMwB,SACvC,yBAAKU,IAAK3B,KAAKc,SAAUc,IAAKL,EAAKM,QAC9BC,IAAKN,S,GAvBFf,IAAMC,YCSfqB,EAPC,SAACjC,GACb,IAAMkC,EAAOlC,EAAMkC,OAAOC,KAAI,SAACX,GAC3B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAE5C,OAAO,yBAAKrB,UAAU,cAAc+B,ICmBzBI,E,4MArBX3C,MAAM,CAACuC,OAAO,I,EACjBK,e,uCAAe,WAAO3C,GAAP,eAAA4C,EAAA,sEAGYC,EAASC,IAAI,iBAAiB,CAC9CC,OAAO,CAACC,MAAOhD,KAJX,OAGJiD,EAHI,OAOT,EAAKrC,SAAS,CAAC0B,OAAOW,EAASC,KAAKC,UAP3B,2C,6GAUR,OACI,yBAAK5C,UAAU,8BAA8BwB,MAAO,CAACqB,UAAU,SAC3D,kBAAC,EAAD,CAAW/C,SAAUC,KAAKqC,iBAC1B,kBAAC,EAAD,CAAWL,OAAQhC,KAAKP,MAAMuC,c,GAf5BvB,IAAMC,WCDxBqC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.4cdd49ad.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default axios.create({\r\n    baseURL:'https://api.unsplash.com',\r\n    headers:{\r\n        Authorization:\r\n        'Client-ID PKDNvmxEBb_G8baoMJ68bOyoyZHE_O4qDiKWpifUelQ '\r\n    }\r\n});","import React from 'react';\r\n\r\nclass SearchBar extends React.Component{\r\n    state={term:''};\r\n    onFormSubmit=(event)=>{\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.term);\r\n    }\r\n    render(){\r\n        return (  \r\n                  \r\n               \r\n                    // <div className=\"ui segment\">\r\n                    //     <form className=\"ui form\">\r\n                    //         <div className=\"field\">\r\n                    //             <label>Image Search</label>\r\n                    //             <input type=\"text\"/>\r\n                    //         </div>\r\n                            \r\n\r\n                    //     </form>\r\n                    // </div>\r\n\r\n                    <form onSubmit={this.onFormSubmit} className={\"ui fluid category search massive \"} >\r\n                            <div className={\"ui icon input \"}>\r\n                                <input className={\"prompt \"} type=\"text\" value={this.state.term} onChange={e=>this.setState({term:e.target.value})} placeholder={\"Image Search...\"}/>\r\n                                <i className={\"search icon\"}></i>\r\n                            </div>\r\n                             <div className={\"results\"}></div>\r\n                    </form>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default SearchBar;\r\n\r\n","import React from \"react\"\r\n\r\nclass ImageCard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n         \r\n        this.state={spans:0};\r\n        this.imageRef=React.createRef();\r\n    }\r\n    componentDidMount(){\r\n        this.imageRef.current.addEventListener('load',this.setSpans);\r\n    }\r\n\r\n    setSpans=()=>{\r\n        const height=this.imageRef.current.clientHeight;\r\n    \r\n         const spans=Math.ceil(height/10);\r\n         this.setState({spans:spans});\r\n    };\r\n    \r\n    render(){\r\n        const {urls,description}=this.props.image;\r\n        return(\r\n            <div style={{gridRowEnd:`span ${this.state.spans}`}} >\r\n                <img ref={this.imageRef} src={urls.regular}\r\n                     alt={description} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageCard;","import React from \"react\"\r\nimport './ImageList.css';\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nconst ImageList=(props)=>{\r\n    const images=props.images.map((image)=>{\r\n        return <ImageCard key={image.id} image={image} />\r\n    })\r\n    return <div className=\"image-list\">{images}</div>\r\n}\r\n\r\nexport default ImageList;","import React from \"react\";\r\nimport unsplash from \"../api/unsplash\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport ImageList from \"./ImageList\";\r\n\r\nclass App extends React.Component{\r\n    state={images:[]};\r\n onSearchSubmit=async (term)=>{\r\n        // console.log(term);\r\n     \r\n      const response= await unsplash.get('/search/photos',{\r\n            params:{query: term},\r\n            \r\n        });\r\n       this.setState({images:response.data.results});\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"ui center aligned container\" style={{marginTop:'10px'}}>\r\n                <SearchBar onSubmit={this.onSearchSubmit} />\r\n                <ImageList images={this.state.images} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />,document.getElementById(\"root\"));\r\n"],"sourceRoot":""}